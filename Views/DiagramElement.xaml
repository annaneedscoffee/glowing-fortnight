<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:s="clr-namespace:DiagramDesigner"
                    xmlns:c="clr-namespace:DiagramDesigner.Controls">

    <ContextMenu x:Key="DiagramElementContextMenu">
        <MenuItem Header="Cut" Command="{x:Static ApplicationCommands.Cut}">
            <MenuItem.Icon>
                <Image Source="Images/Cut.png" Width="16"/>
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem Header="Copy" Command="{x:Static ApplicationCommands.Copy}">
            <MenuItem.Icon>
                <Image Source="Images/Copy.png" Width="16"/>
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem Header="Paste" Command="{x:Static ApplicationCommands.Paste}">
            <MenuItem.Icon>
                <Image Source="Images/Paste.png" Width="16"/>
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem Header="Delete" Command="{x:Static ApplicationCommands.Delete}">
            <MenuItem.Icon>
                <Image Source="Images/Delete.png" Width="16"/>
            </MenuItem.Icon>
        </MenuItem>
        <Separator/>
        <MenuItem Header="Grouping">
            <MenuItem Header="Group" Command="{x:Static s:DiagramCanvas.Group}">
                <MenuItem.Icon>
                    <Image Source="Images/Group.png" Width="16"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Ungroup" Command="{x:Static s:DiagramCanvas.Ungroup}">
                <MenuItem.Icon>
                    <Image Source="Images/Ungroup.png" Width="16"/>
                </MenuItem.Icon>
            </MenuItem>
        </MenuItem>
    </ContextMenu>

    <!-- ConnectionNode Style -->
    <Style TargetType="{x:Type s:ConnectionNode}">
        <Setter Property="Width" Value="8"/>
        <Setter Property="Height" Value="8"/>
        <Setter Property="Cursor" Value="Cross"/>
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type s:ConnectionNode}">
                    <Grid>
                        <!-- transparent extra space makes ConnectionNode easier to hit -->
                        <Rectangle Fill="Transparent" Margin="-2"/>
                        <Rectangle Fill="Lavender" StrokeThickness="1" Stroke="#AA000080"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ConnectionNodeDecoratorTemplate Default Template -->
    <ControlTemplate x:Key="ConnectionNodeDecoratorTemplate" TargetType="{x:Type Control}">
        <Grid Margin="-5">
            <s:ConnectionNode x:Name="Left" Orientation="Left" VerticalAlignment="Center" HorizontalAlignment="Left"/>
            <s:ConnectionNode x:Name="Top" Orientation="Top" VerticalAlignment="Top" HorizontalAlignment="Center"/>
            <s:ConnectionNode x:Name="Right" Orientation="Right" VerticalAlignment="Center" HorizontalAlignment="Right"/>
            <s:ConnectionNode x:Name="Bottom" Orientation="Bottom" VerticalAlignment="Bottom" HorizontalAlignment="Center"/>
        </Grid>
    </ControlTemplate>

    <!-- ResizeDecorator Default Template -->
    <ControlTemplate x:Key="ResizeDecoratorTemplate" TargetType="{x:Type Control}">
        <Grid Opacity="0.7" SnapsToDevicePixels="true">
            <c:ResizeControl Height="3" Cursor="SizeNS" Margin="0 -4 0 0"
                     VerticalAlignment="Top" HorizontalAlignment="Stretch"/>
            <c:ResizeControl Width="3" Cursor="SizeWE" Margin="-4 0 0 0"
                     VerticalAlignment="Stretch" HorizontalAlignment="Left"/>
            <c:ResizeControl Width="3" Cursor="SizeWE" Margin="0 0 -4 0"
                     VerticalAlignment="Stretch" HorizontalAlignment="Right"/>
            <c:ResizeControl Height="3" Cursor="SizeNS" Margin="0 0 0 -4"
                     VerticalAlignment="Bottom" HorizontalAlignment="Stretch"/>
            <c:ResizeControl Width="7" Height="7" Cursor="SizeNWSE" Margin="-6 -6 0 0"
                     VerticalAlignment="Top" HorizontalAlignment="Left"/>
            <c:ResizeControl Width="7" Height="7" Cursor="SizeNESW" Margin="0 -6 -6 0"
                     VerticalAlignment="Top" HorizontalAlignment="Right"/>
            <c:ResizeControl Width="7" Height="7" Cursor="SizeNESW" Margin="-6 0 0 -6"
                     VerticalAlignment="Bottom" HorizontalAlignment="Left"/>
            <c:ResizeControl Width="7" Height="7" Cursor="SizeNWSE" Margin="0 0 -6 -6"
                     VerticalAlignment="Bottom" HorizontalAlignment="Right"/>
        </Grid>
    </ControlTemplate>

    <!-- DragControl Default Template -->
    <Style TargetType="{x:Type c:DragControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c:DragControl}">
                    <Rectangle Fill="Transparent"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- DiagramElement Style -->
    <Style TargetType="{x:Type s:DiagramElement}">
        <Setter Property="MinWidth" Value="10"/>
        <Setter Property="MinHeight" Value="10"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type s:DiagramElement}">
                    <Grid DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                          ContextMenu="{StaticResource DiagramElementContextMenu}">
                        <!-- DragControl -->
                        <c:DragControl x:Name="DragControl" 
                                     Cursor="SizeAll"/>
                        <!-- ResizeDecorator -->
                        <Control x:Name="ResizeDecorator" 
                                 Visibility="Collapsed"
                                 Template="{StaticResource ResizeDecoratorTemplate}"/>
                        <!-- ContentPresenter -->
                        <ContentPresenter x:Name="ContentPresenter"
                                          HorizontalAlignment="Stretch"
                                          VerticalAlignment="Stretch"
                                          Content="{TemplateBinding ContentControl.Content}"
                                          Margin="{TemplateBinding ContentControl.Padding}"/>
                        <!-- ConnectionNodeDecorator -->
                        <Control x:Name="ConnectionNodeDecorator"
                                 Visibility="Hidden"
                                 Template="{StaticResource ConnectionNodeDecoratorTemplate}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Value="True" Binding="{Binding RelativeSource={RelativeSource Self},Path=IsGroup}">
                            <Setter TargetName="DragControl" Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Value="True" Binding="{Binding RelativeSource={RelativeSource Self},Path=IsSelected}"/>
                                <Condition Value="{x:Static sys:Guid.Empty}" Binding="{Binding RelativeSource={RelativeSource Self},Path=ParentID}"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="ResizeDecorator" Property="Visibility" Value="Visible"/>
                        </MultiDataTrigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="ConnectionNodeDecorator" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <DataTrigger Value="True" Binding="{Binding RelativeSource={RelativeSource Self},Path=IsDragConnectionOver}">
                            <Setter TargetName="ConnectionNodeDecorator" Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                        <DataTrigger Value="True" Binding="{Binding RelativeSource={RelativeSource Self},Path=IsGroup}">
                            <Setter TargetName="ConnectionNodeDecorator" Property="Visibility" Value="Hidden"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>